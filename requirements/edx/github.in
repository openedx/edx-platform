# DON'T JUST ADD NEW DEPENDENCIES!!!
#
# If you open a pull request that adds a new dependency, you should:
#   * verify that the dependency has a license compatible with AGPLv3
#   * confirm that it has no system requirements beyond what we already install
#   * run "make upgrade" to update the detailed requirements files
#
# Do *NOT* install Python packages from GitHub unless it's absolutely necessary!
# "I don't have time to add automatic Travis upload to PyPI." is *not* an
# acceptable excuse. Non-wheel module installations slow down the dev/building process.
# Travis/PyPI instructions are here:
# https://openedx.atlassian.net/wiki/spaces/OpenOPS/pages/41911049/Publishing+a+Package+to+PyPI+using+Travis
#
# A correct GitHub reference looks like this:
#
#   git+https://github.com/OWNER/REPO-NAME.git@TAG-OR-SHA#egg=DIST-NAME==VERSION
#
# For example:
#
#   git+https://github.com/edx/edx-lint.git@v0.3.2#egg=edx_lint==0.3.2
#
# where:
#
#   OWNER = edx
#   REPO-NAME = edx-lint
#   TAG-OR-SHA = v0.3.2
#   DIST-NAME = edx_lint
#   VERSION = 0.3.2
#
#
# Rules to follow (even though many URLs here don't follow them!):
#
#   * Don't leave out any of these pieces.
#
#   * TAG-OR-SHA is the specific commit to install.  It must be a git tag,
#     or a git SHA commit hash.  Don't use branch names here.  If OWNER is
#     not an edX organization, then it must be a SHA.  If you use a SHA,
#     please make sure there is a tag associated with it, so the commit can't
#     be lost during rebase.
#
#   * DIST-NAME is the distribution name, the same name you'd use in a
#     "pip install" command.  It might be different than REPO-NAME. It must
#     be the same as the `name="DIST-NAME"` value in the repo's setup.py.
#
#   * VERSION might not be the same as TAG-OR-SHA, but if the tag names the
#     version, please make it match the VERSION, but with a "v" prefix.
#     VERSION must be the same as the `version="VERSION"` value in the repo's
#     setup.py.  An alternative is to use 0.0 as VERSION: this forces pip to
#     re-install the package each time, and can be useful when working with two
#     repos before picking a version number. Don't use 0.0 on master, only for
#     tight-loop work in progress.


# Python libraries to install directly from github

# Third-party:
-e git+https://github.com/edx/django-wiki.git@0.1.1#egg=django-wiki
git+https://github.com/edx/MongoDBProxy.git@d92bafe9888d2940f647a7b2b2383b29c752f35a#egg=MongoDBProxy==0.1.0+edx.2
-e git+https://github.com/jazkarta/edx-jsme.git@690dbf75441fa91c7c4899df0b83d77f7deb5458#egg=edx-jsme
-e git+https://github.com/overhangio/py2neo.git@py2neo-3.1.2#egg=py2neo==3.1.2

# This is a temporary fork until https://github.com/brutasse/django-ratelimit-backend/pull/50 is merged
# back into the upstream code.
git+https://github.com/edx/django-ratelimit-backend.git@v2.0.1a5#egg=django-ratelimit-backend==2.0.1a5

# Our libraries:
-e git+https://github.com/edx/codejail.git@3.1.3#egg=codejail==3.1.3
-e git+https://github.com/edx/acid-block.git@758855a67d2f12bd74db4d5e7a0862d6e65f079c#egg=acid-xblock
-e git+https://github.com/edx/RateXBlock.git@2.0.1#egg=rate-xblock
-e git+https://github.com/edx/DoneXBlock.git@2.0.3#egg=done-xblock
-e git+https://github.com/edx-solutions/xblock-google-drive.git@2d176468e33c0713c911b563f8f65f7cf232f5b6#egg=xblock-google-drive


# Third Party XBlocks

git+https://github.com/open-craft/xblock-poll@1efd04bd6e16252a20e39a7516f9b69a000ace24#egg=xblock-poll==1.10.0
git+https://github.com/edx-solutions/xblock-drag-and-drop-v2@v2.2.10#egg=xblock-drag-and-drop-v2==2.2.10
