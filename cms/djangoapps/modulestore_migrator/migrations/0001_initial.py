# Generated by Django 4.2.22 on 2025-06-10 04:27

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import opaque_keys.edx.django.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('oel_collections', '0005_alter_collection_options_alter_collection_enabled'),
        ('oel_publishing', '0008_alter_draftchangelogrecord_options_and_more'),
        ('content_staging', '0005_stagedcontent_version_num'),
        ('user_tasks', '0004_url_textfield'),
    ]

    operations = [
        migrations.CreateModel(
            name='ModulestoreBlockMigration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('change_log_record', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='oel_publishing.draftchangelogrecord')),
            ],
        ),
        migrations.CreateModel(
            name='ModulestoreMigration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('composition_level', models.CharField(choices=[('component', 'Component'), ('unit', 'Unit'), ('subsection', 'Subsection'), ('section', 'Section')], default='component', help_text='Maximum hierachy level at which content should be aggregated in target library', max_length=255)),
                ('replace_existing', models.BooleanField(default=False, help_text='If a piece of content already exists in the content library, should the import process replace it?')),
                ('change_log', models.ForeignKey(help_text='Changelog entry in the target learning package which records this migration', null=True, on_delete=django.db.models.deletion.SET_NULL, to='oel_publishing.draftchangelog')),
            ],
        ),
        migrations.CreateModel(
            name='ModulestoreSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', opaque_keys.edx.django.models.LearningContextKeyField(help_text='Key of the content source (a course or a legacy library)', max_length=255, unique=True)),
                ('forwarded_by', models.ForeignKey(help_text='If set, the system will forward references of this source over to the target of this migration', null=True, on_delete=django.db.models.deletion.SET_NULL, to='modulestore_migrator.modulestoremigration')),
            ],
        ),
        migrations.AddField(
            model_name='modulestoremigration',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='migrations', to='modulestore_migrator.modulestoresource'),
        ),
        migrations.AddField(
            model_name='modulestoremigration',
            name='staged_content',
            field=models.OneToOneField(help_text='Modulestore content is processed and staged before importing it to a learning packge. We temporarily save the staged content to allow for troubleshooting of failed migrations.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='content_staging.stagedcontent'),
        ),
        migrations.AddField(
            model_name='modulestoremigration',
            name='target',
            field=models.ForeignKey(help_text='Content will be imported into this library', on_delete=django.db.models.deletion.CASCADE, to='oel_publishing.learningpackage'),
        ),
        migrations.AddField(
            model_name='modulestoremigration',
            name='target_collection',
            field=models.ForeignKey(blank=True, help_text='Optional - Collection (within the target library) into which imported content will be grouped', null=True, on_delete=django.db.models.deletion.SET_NULL, to='oel_collections.collection'),
        ),
        migrations.AddField(
            model_name='modulestoremigration',
            name='task_status',
            field=models.OneToOneField(help_text='Tracks the status of the task which is executing this migration', on_delete=django.db.models.deletion.RESTRICT, to='user_tasks.usertaskstatus'),
        ),
        migrations.CreateModel(
            name='ModulestoreBlockSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('key', opaque_keys.edx.django.models.UsageKeyField(help_text='Original usage key of the XBlock that has been imported.', max_length=255)),
                ('forwarded_by', models.ForeignKey(help_text='If set, the system will forward references of this block source over to the target of this block migration', null=True, on_delete=django.db.models.deletion.SET_NULL, to='modulestore_migrator.modulestoreblockmigration')),
                ('overall_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='modulestore_migrator.modulestoresource')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='modulestoreblockmigration',
            name='overall_migration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='block_migrations', to='modulestore_migrator.modulestoremigration'),
        ),
        migrations.AddField(
            model_name='modulestoreblockmigration',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modulestore_migrator.modulestoreblocksource'),
        ),
        migrations.AddField(
            model_name='modulestoreblockmigration',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oel_publishing.publishableentity'),
        ),
        migrations.AlterUniqueTogether(
            name='modulestoreblockmigration',
            unique_together={('overall_migration', 'target'), ('overall_migration', 'source')},
        ),
    ]
